{
  "Groups": [
    {
      "UniqueId": "MenusAndToolbars",
      "Title": "Menus & toolbars",
      "ImagePath": "",
      "IconGlyph": "",
      "Items": [
        {
          "UniqueId": "XamlUICommand",
          "Title": "XamlUICommand",
          "ApiNamespace": "Microsoft.UI.Xaml.Input",
          "Subtitle": "An object which is used to define the look and feel of a given command.",
          "ImagePath": "ms-appx:///Assets/ControlImages/AppBarSeparator.png",
          "Description": "An object which is used to define the look and feel of a given command, which can be reused across your app, and which is understood natively by the standard XAML controls.",
          "Docs": [
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/commanding#command-experiences-using-the-xamluicommand-class"
            },
            {
              "Title": "XamlUICommand - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.input.xamluicommand"
            }
          ],
          "RelatedControls": [
            "StandardUICommand",
            "AppBarButton",
            "AppBarToggleButton",
            "CommandBar"
          ]
        },
        {
          "UniqueId": "StandardUICommand",
          "Title": "StandardUICommand",
          "ApiNamespace": "Microsoft.UI.Xaml.Input",
          "Subtitle": "A StandardUICommand is a built-in 'XamlUICommand' which represents a commonly used command, e.g. 'Save'.",
          "ImagePath": "ms-appx:///Assets/ControlImages/AppBarSeparator.png",
          "Description": "StandardUICommands are a set of built-in XamlUICommands represeting commonly used commands. Including the look and feel of a given command, which can be reused across your app, and which is understood natively by the standard XAML controls. E.g. Save, Open, Copy, Paste, etc.",
          "Docs": [
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/commanding#command-experiences-using-the-standarduicommand-class"
            },
            {
              "Title": "StandardUICommand - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.input.standarduicommand"
            }
          ],
          "RelatedControls": [
            "XamlUICommand",
            "AppBarButton",
            "AppBarToggleButton",
            "CommandBar"
          ]
        },
        {
          "UniqueId": "AppBarButton",
          "Title": "AppBarButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A button that's styled for use in a CommandBar.",
          "ImagePath": "ms-appx:///Assets/ControlImages/AppBarButton.png",
          "Description": "App bar buttons differ from standard buttons in several ways:\n- Their default appearance is a transparent background with a smaller size.\n- You use the Label and Icon properties to set the content instead of the Content property. The Content property is ignored.\n- The button's IsCompact property controls its size.",
          "Content": "<p>You can open the app bar and toggle the IsCompact button to see how the app bar buttons on this page change.</p><p>Use the <b>Label</b> and <b>Icon</b> properties to define the content of the app bar buttons. Set the <b>Label</b> property to a string to specify the text label. The label is shown by default but is hidden when the button is in its compact state, so you also need to specify a meaningful icon. To do that, set the button's <b>Icon</b> property to an element derived from the <b>IconElement</b> class. Four kinds of icon elements are provided:</p><p><b>FontIcon</b> - The icon is based on a glyph from the specified font family.</p><p><b>BitmapIcon</b> - The icon is based on a bitmap image file with the specified Uri.</p><p><b>PathIcon</b> - The icon is based on Path data.</p><p><b>SymbolIcon</b> - The icon is based on a predefined list of glyphs from the Segoe UI Symbol font.</p><p>Look at the <i>AppBarButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath":  "/CommonStyles/AppBarButton_themeresources.xaml",
          "Docs": [
            {
              "Title": "AppBarButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.appbarbutton"
            },
            {
              "Title": "SymbolIcon - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.symbolicon"
            },
            {
              "Title": "FontIcon - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.fonticon"
            },
            {
              "Title": "BitmapIcon - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.bitmapicon"
            },
            {
              "Title": "PathIcon - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.pathicon"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/command-bar"
            }
          ],
          "RelatedControls": [
            "AppBarToggleButton",
            "AppBarSeparator",
            "CommandBar"
          ]
        },
        {
          "UniqueId": "AppBarSeparator",
          "Title": "AppBarSeparator",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A vertical line that's used to visually separate groups of commands in an app bar.",
          "ImagePath": "ms-appx:///Assets/ControlImages/AppBarSeparator.png",
          "Description": "An AppBarSeparator creates a vertical line to visually separate groups of commands in a app bar. It has a compact state with reduced padding to match the compact state of the AppBarButton and AppBarToggleButton controls.",
          "Content": "<p>You can open the app bar and toggle the IsCompact button to see how the app bar buttons and separators on this page change.</p><p>When the <b>IsCompact</b> property is true, the padding around the <b>AppBarSeparator</b> is reduced.</p><p>Look at the <i>AppBarSeparatorPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/AppBarSeparator_themeresources.xaml",
          "Docs": [
            {
              "Title": "AppBarSeparator - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.appbarseparator"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/command-bar"
            }
          ],
          "RelatedControls": [
            "AppBarButton",
            "AppBarToggleButton",
            "CommandBar"
          ]
        },
        {
          "UniqueId": "AppBarToggleButton",
          "Title": "AppBarToggleButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A button that can be on, off, or indeterminate like a CheckBox, and is styled for use in an app bar or other specialized UI.",
          "ImagePath": "ms-appx:///Assets/ControlImages/AppBarToggleButton.png",
          "Description": "An AppBarToggleButton looks like an AppBarButton, but works like a CheckBox. It typically has two states, checked (on) or unchecked (off), but can be indeterminate if the IsThreeState property is true. You can determine it's state by checking the IsChecked property.",
          "Content": "<p>You can open the app bar and toggle the IsCompact button to see how the app bar buttons on this page change.</p><p>Look at the <i>AppBarToggleButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/AppBarToggleButton_themeresources.xaml",
          "Docs": [
            {
              "Title": "AppBarToggleButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.appbartogglebutton"
            },
            {
              "Title": "SymbolIcon - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.symbolicon"
            },
            {
              "Title": "FontIcon - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.fonticon"
            },
            {
              "Title": "BitmapIcon - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.bitmapicon"
            },
            {
              "Title": "PathIcon - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.pathicon"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/command-bar"
            }
          ],
          "RelatedControls": [
            "AppBarButton",
            "AppBarSeparator",
            "CommandBar"
          ]
        },
        {
            "UniqueId": "CommandBar",
            "Title": "CommandBar",
            "ApiNamespace": "Microsoft.UI.Xaml.Controls",
            "Subtitle": "A toolbar for displaying application-specific commands that handles layout and resizing of its contents.",
            "ImagePath": "ms-appx:///Assets/ControlImages/CommandBar.png",
            "Description": "Command bars provide users with easy access to your app's most common tasks. Command bars can provide access to app-level or page-specific commands and can be used with any navigation pattern. By default, the command bar shows a row of icon buttons and an optional \"see more\" button, which is represented by an ellipsis [...].",
            "Content": "<p>The bottom app bar on this page is a <b>CommandBar</b> control.</p><p>Add secondary commands and then resize the app to see how the <b>CommandBar</b> automatically adapts to different widths.</p><p>This <b>CommandBar</b> element is in the ItemPage so it can be shared across all control pages in the app. Look at the <i>ItemPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
            "SourcePath": "/CommonStyles/CommandBar_themeresources.xaml",
            "Docs": [
                {
                    "Title": "CommandBar - API",
                    "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.commandbar"
                },
                {
                    "Title": "Guidelines",
                    "Uri": "https://learn.microsoft.com/windows/apps/design/controls/command-bar"
                }
            ],
            "RelatedControls": [
                "AppBarButton",
                "AppBarToggleButton",
                "AppBarSeparator"
            ]
        },
        {
          "UniqueId": "MenuBar",
          "Title": "MenuBar",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A classic menu, allowing the display of MenuItems containing MenuFlyoutItems.",
          "ImagePath": "ms-appx:///Assets/ControlImages/MenuBar.png",
          "Description": "The Menubar simplifies the creation of basic applications by providing a set of menus at the top of the app or window.",
          "SourcePath": "/MenuBar",
          "Docs": [
            {
              "Title": "MenuBar - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.Controls.MenuBar"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/menus"
            }
          ],
          "RelatedControls": [
            "CommandBar",
            "MenuFlyout",
            "StandardUICommand",
            "XamlUICommand"
          ]
        },
        {
          "UniqueId": "CommandBarFlyout",
          "Title": "CommandBarFlyout",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A mini-toolbar displaying proactive commands, and an optional menu of commands.",
          "ImagePath": "ms-appx:///Assets/ControlImages/CommandBarFlyout.png",
          "Description": "A mini-toolbar which displays a set of proactive commands, as well as a secondary menu of commands if desired.",
          "SourcePath": "/MenuBar",
          "Docs": [
            {
              "Title": "CommandBarFlyout - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.commandbarflyout"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/command-bar-flyout"
            }
          ],
          "RelatedControls": [
            "CommandBar",
            "MenuFlyout",
            "RichEditBox",
            "TextBox",
            "StandardUICommand",
            "XamlUICommand"
          ]
        },
        {
          "UniqueId": "MenuFlyout",
          "Title": "MenuFlyout",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Shows a contextual list of simple commands or options.",
          "ImagePath": "ms-appx:///Assets/ControlImages/MenuFlyout.png",
          "Description": "A MenuFlyout displays lightweight UI that is light dismissed by clicking or tapping off of it. Use it to let the user choose from a contextual list of simple commands or options.",
          "Content": "<p>Look at the <i>MenuFlyoutPage.xaml</i> file in Visual Studio to see the full code.</p>",
          "SourcePath": "/CommonStyles/MenuFlyout_themeresources.xaml",
          "Docs": [
            {
              "Title": "MenuFlyout - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.menuflyout"
            },
            {
              "Title": "MenuFlyoutItem - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.menuflyoutitem"
            },
            {
              "Title": "MenuFlyoutSeparator - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.menuflyoutseparator"
            },
            {
              "Title": "ToggleMenuFlyoutItem - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.togglemenuflyoutitem"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/menus"
            }
          ],
          "RelatedControls": [
            "Flyout",
            "ContentDialog",
            "Button",
            "AppBarButton"
          ]
        },
        {
          "UniqueId": "SwipeControl",
          "Title": "SwipeControl",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Touch gesture for quick menu actions on items.",
          "ImagePath": "ms-appx:///Assets/ControlImages/SwipeControl.png",
          "Description": "Touch gesture for quick menu actions on items.",
          "IsUpdated": true,
          "Docs": [
            {
              "Title": "SwipeControl - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.swipecontrol"
            },
            {
              "Title": "SwipeItems - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.swipeitems"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/swipe"
            },
            {
              "Title": "Gesture Actions",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/collection-commanding"
            }
          ],
          "RelatedControls": [
            "GridView",
            "ListView"
          ]
        }
      ]
    },
    {
      "UniqueId": "DateAndTime",
      "Title": "Date & time",
      "ImagePath": "",
      "IconGlyph": "",
      "Items": [
        {
          "UniqueId": "CalendarDatePicker",
          "Title": "CalendarDatePicker",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that lets users pick a date value using a calendar.",
          "ImagePath": "ms-appx:///Assets/ControlImages/CalendarDatePicker.png",
          "Description": "A control that lets users pick a date value using a calendar.",
          "SourcePath": "/CommonStyles/CalendarDatePicker_themeresources.xaml",
          "Docs": [
            {
              "Title": "CalendarDatePicker - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.calendardatepicker"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/calendar-date-picker"
            }
          ],
          "RelatedControls": [
            "DatePicker",
            "CalendarView"
          ]
        },
        {
          "UniqueId": "CalendarView",
          "Title": "CalendarView",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that presents a calendar for a user to choose a date from.",
          "ImagePath": "ms-appx:///Assets/ControlImages/CalendarView.png",
          "Description": "CalendarView shows a larger view for showing and selecting dates.  DatePicker by contrast has a compact view with inline selection.",
          "Content": "<p>Look at the <i>CalendarView.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/CalendarView_themeresources.xaml",
          "Docs": [
            {
              "Title": "CalendarView - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.calendarview"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/calendar-view"
            }
          ],
          "RelatedControls": [
            "CalendarDatePicker",
            "DatePicker",
            "TimePicker"
          ]
        },
        {
          "UniqueId": "DatePicker",
          "Title": "DatePicker",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that lets a user pick a date value.",
          "ImagePath": "ms-appx:///Assets/ControlImages/DatePicker.png",
          "Description": "Use a DatePicker to let users set a date in your app, for example to schedule an appointment. The DatePicker displays three controls for month, date, and year. These controls are easy to use with touch or mouse, and they can be styled and configured in several different ways.",
          "Content": "<p>Look at the <i>DatePickerPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/DatePicker_themeresources.xaml",
          "Docs": [
            {
              "Title": "DatePicker - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.datepicker"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/date-picker"
            }
          ],
          "RelatedControls": [
            "CalendarDatePicker",
            "CalendarView",
            "TimePicker"
          ]
        },
        {
          "UniqueId": "TimePicker",
          "Title": "TimePicker",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A configurable control that lets a user pick a time value.",
          "ImagePath": "ms-appx:///Assets/ControlImages/TimePicker.png",
          "Description": "Use a TimePicker to let users set a time in your app, for example to set a reminder. The TimePicker displays three controls for hour, minute, and AM/PM. These controls are easy to use with touch or mouse, and they can be styled and configured in several different ways.",
          "Content": "<p>Look at the <i>TimePickerPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/TimePicker_themeresources.xaml",
          "Docs": [
            {
              "Title": "TimePicker - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.timepicker"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/time-picker"
            }
          ],
          "RelatedControls": [
            "DatePicker",
            "CalendarView"
          ]
        }
      ]
    },
    {
      "UniqueId": "BasicInput",
      "Title": "Basic input",
      "ImagePath": "",
      "IconGlyph": "",
      "Items": [
        {
          "UniqueId": "InputValidation",
          "Title": "InputValidation",
          "Subtitle": "A feature to display developer-defined errors for text values",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "ImagePath": "ms-appx:///Assets/ControlImages/InputValidation.png",
          "Description": "A feature that will display an error for invalid text. The app is notified when text has been changed by the user and is responsible for determining whether the text is valid and the error message",
          "Content": "<p>Look at the <i>InputValidationPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "RelatedControls": [
            "TextBox",
            "PasswordBox"
          ]
        },
        {
          "UniqueId": "Button",
          "Title": "Button",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that responds to user input and raises a Click event.",
          "ImagePath": "ms-appx:///Assets/ControlImages/Button.png",
          "Description": "The Button control provides a Click event to respond to user input from a touch, mouse, keyboard, stylus, or other input device. You can put different kinds of content in a button, such as text or an image, or you can restyle a button to give it a new look.",
          "Content": "<p>The main purpose of a <b>Button</b> is to make something happen when a user clicks it. There are two ways you can make something happen:</p><ul><li>Handle the <b>Click</b> event.</li><li>Bind the <b>Command</b> property to an ICommand implementation that describes the command logic.</li></ul><p>Buttons often have only simple string content, but you can use any object as content. You can also change the style and template to give them any look you want.</p><p>Look at the <i>ButtonPage.xaml</i> file in Visual Studio to see the custom button style and template definitions used on this page.</p>",
          "IsUpdated": true,
          "SourcePath": "/CommonStyles/Button_themeresources.xaml",
          "Docs": [
            {
              "Title": "Button - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.button"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/buttons"
            }
          ],
          "RelatedControls": [
            "ToggleButton",
            "RepeatButton",
            "HyperlinkButton",
            "AppBarButton"
          ]
        },
        {
          "UniqueId": "DropDownButton",
          "Title": "DropDownButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A button that displays a flyout of choices when clicked.",
          "ImagePath": "ms-appx:///Assets/ControlImages/DropDownButton.png",
          "Description": "A control that drops down a flyout of choices from which one can be chosen.",
          "SourcePath": "/DropDownButton",
          "Docs": [
            {
              "Title": "DropDownButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.dropdownbutton"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/buttons"
            }
          ],
          "RelatedControls": [
            "SplitButton",
            "ToggleSplitButton",
            "ToggleButton",
            "RepeatButton",
            "HyperlinkButton",
            "AppBarButton",
            "CommandBar"
          ]
        },
        {
          "UniqueId": "HyperlinkButton",
          "Title": "HyperlinkButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A button that appears as hyperlink text, and can navigate to a URI or handle a Click event.",
          "ImagePath": "ms-appx:///Assets/ControlImages/HyperlinkButton.png",
          "Description": "A HyperlinkButton appears as a text hyperlink. When a user clicks it, it opens the page you specify in the NavigateUri property in the default browser. Or you can handle its Click event, typically to navigate within your app.",
          "Content": "<p>A <b>HyperlinkButton</b> looks like hyperlink text, but works like a button. You can use it in two ways:</p><ul><li>Set the <b>NavigateUri</b> property. When a user clicks it, it will automatically open the URI in the default browser.</li><li>Handle the <b>Click</b> event. This works just like the <b>Click</b> event of a standard <b>Button</b>, and can be used to navigate within your app.</li></ul><p>Each control page in this app has two sets of hyperlink buttons, one set to open documentation in Internet Explorer, and one set to navigate to related control pages in the app.</p><p>Look at the <i>HyperlinkButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/HyperlinkButton_themeresources.xaml",
          "Docs": [
            {
              "Title": "HyperlinkButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.hyperlinkbutton"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/hyperlinks"
            }
          ],
          "RelatedControls": [
            "Button",
            "ToggleButton",
            "RepeatButton",
            "AppBarButton"
          ]
        },
        {
          "UniqueId": "RepeatButton",
          "Title": "RepeatButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls.Primitives",
          "Subtitle": "A button that raises its Click event repeatedly from the time it's pressed until it's released.",
          "ImagePath": "ms-appx:///Assets/ControlImages/Button.png",
          "Description": "The RepeatButton control is like a standard Button, except that the Click event occurs continuously while the user presses the RepeatButton.",
          "Content": "<p>A <b>RepeatButton</b> looks just like a regular <b>Button</b>, but it's <b>Click</b> event occurs continuously while the button is pressed.</p><p>Look at the <i>RepeatButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/RepeatButton_themeresources.xaml",
          "Docs": [
            {
              "Title": "RepeatButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.primitives.repeatbutton"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/buttons"
            }
          ],
          "RelatedControls": [
            "Button",
            "ToggleButton",
            "HyperlinkButton",
            "AppBarButton"
          ]
        },
        {
          "UniqueId": "ToggleButton",
          "Title": "ToggleButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls.Primitives",
          "Subtitle": "A button that can be switched between two states like a CheckBox.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ToggleButton.png",
          "Description": "A ToggleButton looks like a Button, but works like a CheckBox. It typically has two states, checked (on) or unchecked (off), but can be indeterminate if the IsThreeState property is true. You can determine it's state by checking the IsChecked property.",
          "Content": "<p><b>ToggleButton</b> is used as a base class for similar controls like <b>CheckBox</b> and <b>RadioButton</b>. It can be used on its own, but don't use it if a <b>CheckBox</b>, <b>RadioButton</b>, or <b>ToggleSwitch</b> would convey your intent better.</p><p>Look at the <i>ToggleButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/ToggleButton_themeresources.xaml",
          "Docs": [
            {
              "Title": "ToggleButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.primitives.togglebutton"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/buttons#create-a-toggle-split-button"
            }
          ],
          "RelatedControls": [
            "Button",
            "AppBarToggleButton",
            "ToggleSwitch",
            "CheckBox",
            "CommandBarFlyout",
            "CommandBar"
          ]
        },
        {
          "UniqueId": "SplitButton",
          "Title": "SplitButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A two-part button that displays a flyout when its secondary part is clicked.",
          "ImagePath": "ms-appx:///Assets/ControlImages/SplitButton.png",
          "Description": "The splitbutton is a dropdown button, but with an addition execution hit target.",
          "IsUpdated": true,
          "SourcePath": "/SplitButton",
          "Docs": [
            {
              "Title": "SplitButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.splitbutton"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/buttons#create-a-split-button"
            }
          ],
          "RelatedControls": [
            "Button",
            "AppBarToggleButton",
            "CommandBar",
            "ToggleSwitch",
            "CheckBox",
            "CommandBarFlyout",
            "CommandBar"
          ]
        },
        {
          "UniqueId": "ToggleSplitButton",
          "Title": "ToggleSplitButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A version of the SplitButton where the activation target toggles on/off.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ToggleSplitButton.png",
          "Description": "A version of the SplitButton where the activation target toggles on/off.",
          "SourcePath": "/SplitButton",
          "Docs": [
            {
              "Title": "ToggleSplitButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.togglesplitbutton"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/buttons"
            }
          ],
          "RelatedControls": [
            "Button",
            "AppBarToggleButton",
            "ToggleSwitch",
            "CheckBox",
            "CommandBarFlyout",
            "CommandBar"
          ]
        },
        {
          "UniqueId": "CheckBox",
          "Title": "CheckBox",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that a user can select or clear.",
          "ImagePath": "ms-appx:///Assets/ControlImages/CheckBox.png",
          "Description": "CheckBox controls let the user select a combination of binary options. In contrast, RadioButton controls allow the user to select from mutually exclusive options. The indeterminate state is used to indicate that an option is set for some, but not all, child options. Don't allow users to set an indeterminate state directly to indicate a third option.",
          "Content": "<p>Check and uncheck these controls to see how they look in each state. The label for each <b>CheckBox</b> is defined by its <b>Content</b> property.</p><p>Use a three-state <b>CheckBox</b> to show that none, some, or all of an items sub-options are checked. You have to add some code to do this. Take a look at the methods in the <i>SelectAllMethods</i> region of <i>CheckBoxPage.xaml.cs</i> to see how we did it.</p>",
          "IsUpdated": true,
          "SourcePath": "/CommonStyles/CheckBox_themeresources.xaml",
          "Docs": [
            {
              "Title": "CheckBox - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.checkbox"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/checkbox"
            }
          ],
          "RelatedControls": [
            "RadioButton",
            "ToggleSwitch",
            "ToggleButton"
          ]
        },
        {
          "UniqueId": "ColorPicker",
          "Title": "ColorPicker",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that displays a selectable color spectrum.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ColorPicker.png",
          "Description": "A selectable color spectrum.",
          "SourcePath": "/ColorPicker",
          "Docs": [
            {
              "Title": "ColorPicker - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.Controls.ColorPicker"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/color-picker"
            }
          ],
          "RelatedControls": [
            "ComboBox"
          ]
        },
        {
          "UniqueId": "ComboBox",
          "Title": "ComboBox",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A drop-down list of items a user can select from.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ComboBox.png",
          "Description": "Use a ComboBox when you need to conserve on-screen space and when users select only one option at a time. A ComboBox shows only the currently selected item.",
          "SourcePath": "/ComboBox",
          "Docs": [
            {
              "Title": "ComboBox - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.combobox"
            },
            {
              "Title": "ComboBoxItem - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.comboboxitem"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/combo-box"
            }
          ],
          "RelatedControls": [
            "ListBox",
            "RadioButton",
            "CheckBox",
            "ListView",
            "AutoSuggestBox",
            "RatingControl"
          ]
        },
        {
          "UniqueId": "RadioButton",
          "Title": "RadioButton",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that allows a user to select a single option from a group of options.",
          "ImagePath": "ms-appx:///Assets/ControlImages/RadioButton.png",
          "Description": "Use RadioButtons to let a user choose between mutually exclusive, related options. Generally contained within a RadioButtons group control.",
          "Content": "<p>Look at the <i>RadioButtonPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/RadioButton_themeresources.xaml",
          "Docs": [
            {
              "Title": "RadioButton - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.radiobutton"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/radio-button"
            }
          ],
          "RelatedControls": [
            "CheckBox",
            "RadioButtons",
            "ToggleSwitch",
            "ToggleButton"
          ]
        },
        {
          "UniqueId": "RatingControl",
          "Title": "RatingControl",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Rate something 1 to 5 stars.",
          "ImagePath": "ms-appx:///Assets/ControlImages/RatingControl.png",
          "Description": "Rate something 1 to 5 stars.",
          "SourcePath": "/RatingControl",
          "Docs": [
            {
              "Title": "RatingControl - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.Controls.RatingControl"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/rating"
            }
          ],
          "RelatedControls": [
            "Slider",
            "ComboBox"
          ]
        },
        {
          "UniqueId": "Slider",
          "Title": "Slider",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that lets the user select from a range of values by moving a Thumb control along a track.",
          "ImagePath": "ms-appx:///Assets/ControlImages/Slider.png",
          "Description": "Use a Slider when you want your users to be able to set defined, contiguous values (such as volume or brightness) or a range of discrete values (such as screen resolution settings).",
          "Content": "<p>Look at the <i>SliderPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsUpdated": true,
          "SourcePath": "/CommonStyles/Slider_themeresources.xaml",
          "Docs": [
            {
              "Title": "Slider - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.slider"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/slider"
            }
          ],
          "RelatedControls": [
            "ComboBox",
            "ListBox",
            "RatingControl"
          ]
        },
        {
          "UniqueId": "ToggleSwitch",
          "Title": "ToggleSwitch",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A switch that can be toggled between 2 states.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ToggleSwitch.png",
          "Description": "Use ToggleSwitch controls to present users with exactly two mutually exclusive options (like on/off), where choosing an option results in an immediate commit. A toggle switch should have a single label.",
          "Content": "<p>Look at the <i>ToggleSwitchPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/ToggleSwitch_themeresources.xaml",
          "Docs": [
            {
              "Title": "ToggleSwitch - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.toggleswitch"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/toggles"
            }
          ],
          "RelatedControls": [
            "ToggleButton",
            "RadioButton",
            "CheckBox",
            "AppBarToggleButton"
          ]
        }
      ]
    },
    {
      "UniqueId": "StatusAndInfo",
      "Title": "Status & info",
      "ImagePath": "",
      "IconGlyph": "",
      "Items": [
        {
          "UniqueId": "InfoBadge",
          "Title": "InfoBadge",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "An non-intrusive UI to display notifications or bring focus to an area",
          "ImagePath": "ms-appx:///Assets/ControlImages/InfoBadge.png",
          "Description": "Badging is a non-intrusive and intuitive way to display notifications or bring focus to an area within an app - whether that be for notifications, indicating new content, or showing an alert.",
          "Content": "<p>Look at the <i>InfoBadgePage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/InfoBadge",
          "Docs": [
            {
              "Title": "InfoBadge - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.infobadge"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/info-badge"
            }
          ],
          "RelatedControls": [
            "InfoBar",
            "TeachingTip"
          ]
        },
        {
          "UniqueId": "InfoBar",
          "Title": "InfoBar",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "An inline message to display app-wide status change information",
          "ImagePath": "ms-appx:///Assets/ControlImages/InfoBar.png",
          "Description": "Use an InfoBar control when a user should be informed of, acknowledge, or take action on a changed application state. By default the notification will remain in the content area until closed by the user but will not necessarily break user flow.",
          "Content": "<p>Look at the <i>InfoBarPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsUpdated": true,
          "SourcePath": "/InfoBar",
          "Docs": [
            {
              "Title": "InfoBar - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.infobar"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/infobar"
            }
          ],
          "RelatedControls": [
            "TeachingTip",
            "ContentDialog"
          ]
        },
        {
          "UniqueId": "ProgressBar",
          "Title": "ProgressBar",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Shows the apps progress on a task, or that the app is performing ongoing work that doesn't block user interaction.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ProgressBar.png",
          "Description": "The ProgressBar has two different visual representations:\nIndeterminate - shows that a task is ongoing, but doesn't block user interaction.\nDeterminate - shows how much progress has been made on a known amount of work.",
          "Content": "<p>Look at the <i>ProgressBarPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/ProgressBar",
          "Docs": [
            {
              "Title": "ProgressBar - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.Controls.ProgressBar"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/progress-controls"
            }
          ],
          "RelatedControls": [
            "ProgressRing"
          ]
        },
        {
          "UniqueId": "ProgressRing",
          "Title": "ProgressRing",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Shows the apps progress on a task, or that the app is performing ongoing work that does block user interaction.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ProgressRing.png",
          "Description": "The ProgressRing has two different visual representations:\nIndeterminate - shows that a task is ongoing, but blocks user interaction.\nDeterminate - shows how much progress has been made on a known amount of work.",
          "Content": "<p>Look at the <i>ProgressRingPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/ProgressRing",
          "Docs": [
            {
              "Title": "ProgressRing - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.progressring"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/progress-controls"
            }
          ],
          "RelatedControls": [
            "ProgressBar"
          ]
        },
        {
          "UniqueId": "ToolTip",
          "Title": "ToolTip",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Displays information for an element in a pop-up window.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ToolTip.png",
          "Description": "A ToolTip shows more information about a UI element. You might show information about what the element does, or what the user should do. The ToolTip is shown when a user hovers over or presses and holds the UI element.",
          "Content": "<p>Look at the <i>ToolTipPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/ToolTip_themeresources.xaml",
          "Docs": [
            {
              "Title": "ToolTip - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.tooltip"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/tooltips"
            }
          ],
          "RelatedControls": [
            "TeachingTip",
            "Flyout",
            "ContentDialog"
          ]
        }
      ]
    },
    {
      "UniqueId": "DialogsAndFlyouts",
      "Title": "Dialogs & flyouts",
      "ImagePath": "",
      "IconGlyph": "",
      "Items": [
        {
          "UniqueId": "ContentDialog",
          "Title": "ContentDialog",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A dialog box that can be customized to contain any XAML content.",
          "ImagePath": "ms-appx:///Assets/ControlImages/ContentDialog.png",
          "Description": "Use a ContentDialog to show relavant information or to provide a modal dialog experience that can show any XAML content.",
          "Content": "<p>Look at the <i>ContentDialog.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsUpdated": true,
          "SourcePath": "/CommonStyles/ContentDialog_themeresources.xaml",
          "Docs": [
            {
              "Title": "ContentDialog - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.contentdialog"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/dialogs-and-flyouts/dialogs"
            }
          ],
          "RelatedControls": [
            "Flyout",
            "MenuFlyout",
            "TeachingTip",
            "ToolTip"
          ]
        },
        {
          "UniqueId": "Flyout",
          "Title": "Flyout",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Shows contextual information and enables user interaction.",
          "ImagePath": "ms-appx:///Assets/ControlImages/Flyout.png",
          "Description": "A Flyout displays lightweight UI that is either information, or requires user interaction. Unlike a dialog, a Flyout can be light dismissed by clicking or tapping off of it. Use it to collect input from the user, show more details about an item, or ask the user to confirm an action.",
          "Content": "<p>Look at the <i>FlyoutPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/FlyoutPresenter_themeresources.xaml",
          "Docs": [
            {
              "Title": "Flyout - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.flyout"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/dialogs-and-flyouts"
            }
          ],
          "RelatedControls": [
            "TeachingTip",
            "ContentDialog",
            "MenuFlyout",
            "Button",
            "AppBarButton"
          ]
        },
        {
          "UniqueId": "TeachingTip",
          "Title": "TeachingTip",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A content-rich flyout for guiding users and enabling teaching moments.",
          "ImagePath": "ms-appx:///Assets/ControlImages/TeachingTip.png",
          "Description": "The XAML TeachingTip Control provides a way for your app to guide and inform users in your application with a non-invasive and content rich notification. TeachingTip can be used for bringing focus to a new or important feature, teaching users how to perform a task, or enhancing the user workflow by providing contextually relevant information to their task at hand.",
          "Content": "<p>Look at the <i>TeachingTip.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/TeachingTip",
          "Docs": [
            {
              "Title": "TeachingTip - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.teachingtip"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/dialogs-and-flyouts/teaching-tip"
            }
          ],
          "RelatedControls": [
            "ContentDialog",
            "Flyout",
            "ToolTip"
          ]
        }
      ]
    },
    {
      "UniqueId": "Navigation",
      "Title": "Navigation",
      "ImagePath": "",
      "IconGlyph": "",
      "Items": [
        {
          "UniqueId": "BreadcrumbBar",
          "Title": "BreadcrumbBar",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Shows the trail of navigation taken to the current location.",
          "ImagePath": "ms-appx:///Assets/ControlImages/BreadcrumbBar.png",
          "Description": "The BreadcrumbBar control provides a common horizontal layout to display the trail of navigation taken to the current location. Resize to see the nodes crumble, starting at the root.",
          "Content": "<p>Look at the <i>BreadcrumbBarPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsUpdated": true,
          "SourcePath": "/Breadcrumb",
          "Docs": [
            {
              "Title": "BreadcrumbBar - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.breadcrumbbar"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/breadcrumbbar"
            }
          ],
          "RelatedControls": [
            "NavigationView",
            "Pivot",
            "TabView"
          ]
        },
        {
          "UniqueId": "NavigationView",
          "Title": "NavigationView",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Common vertical layout for top-level areas of your app via a collapsible navigation menu.",
          "ImagePath": "ms-appx:///Assets/ControlImages/NavigationView.png",
          "Description": "The navigation view control provides a common vertical layout for top-level areas of your app via a collapsible navigation menu.",
          "SourcePath": "/NavigationView",
          "Docs": [
            {
              "Title": "NavigationView - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.Controls.NavigationView"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/navigationview"
            }
          ],
          "RelatedControls": [
            "SplitView",
            "Pivot"
          ]
        },
        {
          "UniqueId": "Pivot",
          "Title": "Pivot",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Presents information from different sources in a tabbed view.",
          "ImagePath": "ms-appx:///Assets/ControlImages/Placeholder.png",
          "Description": "Pivot is not recommended for Windows 11 design patterns. Please use the SelectorBar and SelectorBarItem. A Pivot allows you to show a collection of items from different sources in a tabbed view.",
          "Content": "<p>This page shows a simplified <b>Pivot</b> control with minimal content to demonstrate basic <b>Pivot</b> usage. Look at the <i>PivotPage.xaml</i> file in Visual Studio to see the full code for this page.</p><p>A <b>Pivot</b> control typically takes up the full page.</p>",
          "SourcePath": "/CommonStyles/Pivot_themeresources.xaml",
          "Docs": [
            {
              "Title": "Pivot - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.pivot"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/pivot"
            }
          ],
          "RelatedControls": [
            "SelectorBar"
          ]
        },
        {
          "UniqueId": "SelectorBar",
          "Title": "SelectorBar",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "Presents information from a small set of different sources. The user can pick one of them.",
          "ImagePath": "ms-appx:///Assets/ControlImages/Pivot.png",
          "Description": "SelectorBar is used to modify the content shown by allowing users to select and switch between a small, finite set of data.",
          "Content": "<p>This page shows a simplified <b>SelectorBar</b> control with minimal content to demonstrate basic <b>SelectorBar</b> usage. Look at the <i>SelectorBar.xaml</i> file in Visual Studio to see the full code for this page.</p><p><b>SelectorBar</b> is typically used with <b>SelectorBarItem</b>",
          "SourcePath": "/SelectorBar/SelectorBar_themeresources.xaml",
          "IsNew": true,
          "Docs": [
            {
              "Title": "SelectorBar - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.selectorbar"
            },
            {
              "Title": "SelectorBarItem - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.selectorbaritem"
            }
          ],
          "RelatedControls": [
            "RadioButtons",
            "NavigationView",
            "PipsPager"
          ]
        },
        {
          "UniqueId": "TabView",
          "Title": "TabView",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that displays a collection of tabs that can be used to display several documents.",
          "ImagePath": "ms-appx:///Assets/ControlImages/TabView.png",
          "Description": "TabView provides the user with a collection of tabs that can be used to display several documents.",
          "SourcePath": "/TabView",
          "Docs": [
            {
              "Title": "TabView - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.tabview"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/tab-view"
            },
            {
              "Title": "Show multiple views for an app",
              "Uri": "https://learn.microsoft.com/windows/apps/design/layout/show-multiple-views"
            }
          ],
          "RelatedControls": [
            "Pivot",
            "NavigationView",
            "ListView"
          ]
        }
      ]
    },
    {
      "UniqueId": "Text",
      "Title": "Text",
      "ImagePath": "",
      "IconGlyph": "",
      "Items": [
        {
          "UniqueId": "AutoSuggestBox",
          "Title": "AutoSuggestBox",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control to provide suggestions as a user is typing.",
          "ImagePath": "ms-appx:///Assets/ControlImages/AutoSuggestBox.png",
          "Description": "A text control that makes suggestions to users as they type. The app is notified when text has been changed by the user and is responsible for providing relevant suggestions for this control to display.",
          "Content": "<p>Look at the <i>AutoSuggestBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsUpdated": true,
          "SourcePath": "/AutoSuggestBox",
          "Docs": [
            {
              "Title": "AutoSuggestBox - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.autosuggestbox"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/auto-suggest-box"
            }
          ],
          "RelatedControls": [
            "ListBox",
            "ComboBox",
            "TextBox"
          ]
        },
        {
          "UniqueId": "NumberBox",
          "Title": "NumberBox",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A text control used for numeric input and evaluation of algebraic equations.",
          "ImagePath": "ms-appx:///Assets/ControlImages/NumberBox.png",
          "Description": "Use NumberBox to allow users to enter algebraic equations and numeric input in your app.",
          "Content": "<p>Look at the <i>NumberBox.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/NumberBox",
          "Docs": [
            {
              "Title": "NumberBox - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.numberbox"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/number-box"
            }
          ],
          "RelatedControls": [
            "TextBox",
            "TextBlock",
            "RichTextBlock",
            "RichEditBox"
          ]
        },
        {
          "UniqueId": "PasswordBox",
          "Title": "PasswordBox",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control for entering passwords.",
          "ImagePath": "ms-appx:///Assets/ControlImages/PasswordBox.png",
          "Description": "A user can enter a single line of non-wrapping text in a PasswordBox control. The text is masked by characters that you can specify by using the PasswordChar property, and you can specify the maximum number of characters that the user can enter by setting the MaxLength property.",
          "Content": "<p>Look at the <i>PasswordBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/PasswordBox_themeresources.xaml",
          "Docs": [
            {
              "Title": "PasswordBox - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.passwordbox"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/text-controls"
            }
          ],
          "RelatedControls": [
            "TextBox",
            "TextBlock",
            "RichTextBlock",
            "RichEditBox"
          ]
        },
        {
          "UniqueId": "RichEditBox",
          "Title": "RichEditBox",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A rich text editing control that supports formatted text, hyperlinks, and other rich content.",
          "ImagePath": "ms-appx:///Assets/ControlImages/RichEditBox.png",
          "Description": "You can use a RichEditBox control to enter and edit rich text documents that contain formatted text, hyperlinks, and images. By default, the RichEditBox supports spell checking. You can make a RichEditBox read-only by setting its IsReadOnly property to true.",
          "Content": "<p>On this page, you can type into the <b>RichTextBox</b> control and save it as a RichTextFormat (.rtf) document, or load an existing .rtf document. You can format the text as <b>Bold</b> or <u>Underlined</u>, and change the text color.</p><p>Look at the <i>RichEditBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsUpdated": true,
          "SourcePath": "/CommonStyles/RichEditBox_themeresources.xaml",
          "Docs": [
            {
              "Title": "RichEditBox - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.richeditbox"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/text-controls"
            }
          ],
          "RelatedControls": [
            "NumberBox",
            "TextBox",
            "RichTextBlock",
            "TextBlock"
          ]
        },
        {
          "UniqueId": "RichTextBlock",
          "Title": "RichTextBlock",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A control that displays formatted text, hyperlinks, inline images, and other rich content.",
          "ImagePath": "ms-appx:///Assets/ControlImages/RichTextBlock.png",
          "Description": "RichTextBlock provides more advanced formatting features than the TextBlock control. You can apply character and paragraph formatting to the text in the RichTextBlock. For example, you can apply Bold, Italic, and Underline to any portion of the text in the control. You can use linked text containers (a RichTextBlock linked to RichTextBlockOverflow elements) to create advanced page layouts.",
          "Content": "<p>Change the width of the app to see how the <b>RichTextBlock</b> overflows into additional columns as the app gets narrower.</p><p>Look at the <i>RichTextBlockPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "IsUpdated": true,
          "Docs": [
            {
              "Title": "RichTextBlock - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.richtextblock"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/text-controls"
            }
          ],
          "RelatedControls": [
            "NumberBox",
            "TextBlock",
            "TextBox",
            "PasswordBox",
            "RichEditBox"
          ]
        },
        {
          "UniqueId": "TextBlock",
          "Title": "TextBlock",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A lightweight control for displaying small amounts of text.",
          "ImagePath": "ms-appx:///Assets/ControlImages/TextBlock.png",
          "Description": "TextBlock is the primary control for displaying read-only text in your app. You typically display text by setting the Text property to a simple string. You can also display a series of strings in Run elements and give each different formatting.",
          "Content": "<p>Look at the <i>TextBlockPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/TextBlock_themeresources.xaml",
          "Docs": [
            {
              "Title": "TextBlock - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.textblock"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/text-controls"
            }
          ],
          "RelatedControls": [
            "NumberBox",
            "TextBox",
            "RichTextBlock",
            "PasswordBox",
            "RichEditBox"
          ]
        },
        {
          "UniqueId": "TextBox",
          "Title": "TextBox",
          "ApiNamespace": "Microsoft.UI.Xaml.Controls",
          "Subtitle": "A single-line or multi-line plain text field.",
          "ImagePath": "ms-appx:///Assets/ControlImages/TextBox.png",
          "Description": "Use a TextBox to let a user enter simple text input in your app. You can add a header and placeholder text to let the user know what the TextBox is for, and you can customize it in other ways.",
          "Content": "<p>Look at the <i>TextBoxPage.xaml</i> file in Visual Studio to see the full code for this page.</p>",
          "SourcePath": "/CommonStyles/TextBox_themeresources.xaml",
          "Docs": [
            {
              "Title": "TextBox - API",
              "Uri": "https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.controls.textbox"
            },
            {
              "Title": "Guidelines",
              "Uri": "https://learn.microsoft.com/windows/apps/design/controls/text-controls"
            }
          ],
          "RelatedControls": [
            "NumberBox",
            "TextBlock",
            "RichTextBlock",
            "PasswordBox",
            "RichEditBox",
            "AutoSuggestBox"
          ]
        }
      ]
    }
  ]
}
